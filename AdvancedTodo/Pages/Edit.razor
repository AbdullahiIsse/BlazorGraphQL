@page "/Edit/{Id:int}"
@using AdvancedTodo.Models
@using AdvancedTodo.Data
@inject ITodoData TodoData
@inject NavigationManager NavMgr


<h3>Edit todo with id: @Id</h3>

@if (todoToEdit == null)
{
    <em>Todo not found!</em>
}
else
{
    @foreach (var item in todoToEdit)
    {

        <EditForm Model="@todoToEdit" OnValidSubmit="@Save">
        <DataAnnotationsValidator/> <ValidationSummary/>
        <div class="form-group"> User Id:<br/> <InputNumber @bind-Value="item.UserId"/> </div>
        <div class="form-group"> Title:<br/> <InputTextArea rows="4" @bind-Value="item.Title"/> </div>
        <p class="actions">
            <button class="btn btn-outline-dark" type="submit">Save</button>
        </p>
    </EditForm>
    
     }
    
    
}


@code {

    [Parameter]
    public int Id { get; set; }

    private IList<Todo> todoToEdit;


    protected override async Task OnInitializedAsync()
    {
        todoToEdit =   await TodoData.Get(Id);
      
    }

    private void Save()
    {
        foreach (var item in todoToEdit)
        {

            Todo todo = new Todo
            {
                IsCompleted = item.IsCompleted,
                Title = item.Title,
                TodoId = item.TodoId,
                UserId = item.UserId
            };
            
            TodoData.Update(todo);
            NavMgr.NavigateTo("/Todos",true);
        }
        
    }



}